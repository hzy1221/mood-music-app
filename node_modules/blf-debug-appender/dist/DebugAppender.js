"use strict";
const blfColorfulAppender = require("blf-colorful-appender");
const dateManip = require("date-manip");
const createDebug = require("debug");
class DebugAppender extends blfColorfulAppender.ColorfulAppender {
  constructor() {
    super(...arguments);
    this.name = "debug";
    this.dateFormat = "HH:mm:ss";
  }
  setup({ name }) {
    const debug = createDebug(name);
    debug.enabled = true;
    debug.namespace = name;
    this.debug = debug;
  }
  /**
   * Write log (写入日志)
   * @param event Log event (日志事件)
   */
  write(event) {
    const { layout, debug } = this;
    debug.namespace = event.loggerName;
    if (layout) {
      debug(this.color(layout.format(event), event));
    } else {
      debug(this.color(`[${dateManip.format(event.timestamp, this.dateFormat)}] [${event.levelName}] -`, event), ...event.message);
    }
  }
  /**
   * Close appender (关闭输出)
   */
  close() {
    return Promise.resolve();
  }
}
module.exports = DebugAppender;
